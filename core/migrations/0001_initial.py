# Generated by Django 5.1.7 on 2025-05-30 19:02

import core.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code_commune', models.CharField(max_length=10, unique=True)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('site_web', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('code_region', models.CharField(max_length=15, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tarif',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_acte', models.CharField(choices=[('NAISSANCE', 'Acte de Naissance'), ('MARIAGE', 'Acte de Mariage'), ('DECES', 'Acte de Décès'), ('CERTIFICAT_NAISSANCE', 'Certificat de Naissance'), ('CERTIFICAT_MARIAGE', 'Certificat de Mariage'), ('CERTIFICAT_DECES', 'Certificat de Décès')], max_length=20, unique=True)),
                ('prix_unitaire', models.DecimalField(decimal_places=2, max_digits=8)),
                ('timbre_fiscal', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('date_application', models.DateField(default=django.utils.timezone.now)),
                ('actif', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telephone', models.CharField(blank=True, max_length=15)),
                ('adresse', models.TextField(blank=True)),
                ('role', models.CharField(choices=[('CITOYEN', 'Citoyen'), ('AGENT_COMMUNE', 'Agent de Commune'), ('AGENT_SOUS_PREFECTURE', 'Agent de Sous-Préfecture'), ('ADMINISTRATEUR', 'Administrateur'), ('MAIRE', 'Maire'), ('SOUS_PREFET', 'Sous-Préfet')], default='CITOYEN', max_length=50)),
                ('numero_cni', models.CharField(blank=True, max_length=25, null=True, unique=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('photo', models.ImageField(blank=True, null=True, upload_to=core.models.photo_upload_path)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('commune', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.commune', verbose_name='Commune associée')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DemandeActe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_demande', models.CharField(blank=True, max_length=50, unique=True)),
                ('type_acte', models.CharField(choices=[('NAISSANCE', 'Acte de Naissance'), ('MARIAGE', 'Acte de Mariage'), ('DECES', 'Acte de Décès'), ('CERTIFICAT_NAISSANCE', 'Certificat de Naissance'), ('CERTIFICAT_MARIAGE', 'Certificat de Mariage'), ('CERTIFICAT_DECES', 'Certificat de Décès')], max_length=100)),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('EN_ATTENTE_PAIEMENT', 'En attente de paiement'), ('PAIEMENT_CONFIRME', 'Paiement confirmé'), ('EN_COURS', 'En cours de traitement'), ('APPROUVE', 'Approuvé'), ('REJETE', 'Rejeté'), ('DELIVRE', 'Délivré'), ('ANNULE', 'Annulé')], default='EN_ATTENTE', max_length=25)),
                ('nombre_copies', models.PositiveIntegerField(default=1)),
                ('date_demande', models.DateTimeField(auto_now_add=True)),
                ('date_validation_preliminaire', models.DateTimeField(blank=True, null=True)),
                ('date_traitement', models.DateTimeField(blank=True, null=True)),
                ('date_delivrance', models.DateTimeField(blank=True, null=True)),
                ('motif_demande', models.CharField(choices=[('PERSONNEL', 'Usage personnel'), ('ADMINISTRATIVE', 'Démarche administrative'), ('JURIDIQUE', 'Procédure juridique'), ('SCOLAIRE', 'Inscription scolaire'), ('EMPLOI', "Recherche d'emploi"), ('AUTRE', 'Autre')], default='PERSONNEL', max_length=20)),
                ('lien_avec_personne', models.CharField(choices=[('LUI_MEME', 'Lui-même/Elle-même'), ('PERE', 'Père'), ('MERE', 'Mère'), ('ENFANT', 'Enfant'), ('CONJOINT', 'Conjoint(e)'), ('FRERE_SOEUR', 'Frère/Sœur'), ('REPRESENTANT_LEGAL', 'Représentant légal'), ('AUTRE', 'Autre')], default='LUI_MEME', max_length=50, verbose_name='Lien avec la personne concernée')),
                ('piece_identite_demandeur', models.FileField(blank=True, null=True, upload_to='justificatifs/identite/', verbose_name="Pièce d'identité du demandeur")),
                ('justificatif_lien', models.FileField(blank=True, null=True, upload_to='justificatifs/lien/', verbose_name='Justificatif du lien de parenté')),
                ('commentaire_agent', models.TextField(blank=True)),
                ('commentaire_rejet', models.TextField(blank=True, verbose_name='Motif de rejet')),
                ('mode_retrait', models.CharField(choices=[('SUR_PLACE', 'Retrait sur place'), ('COURRIER', 'Envoi par courrier'), ('EMAIL', 'Envoi par email')], default='SUR_PLACE', max_length=15)),
                ('adresse_livraison', models.TextField(blank=True, verbose_name='Adresse de livraison (si applicable)')),
                ('numero_suivi', models.CharField(blank=True, max_length=30, unique=True, verbose_name='Numéro de suivi public')),
                ('agent_traitant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandes_traitees', to=settings.AUTH_USER_MODEL)),
                ('agent_validateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='demandes_validees', to=settings.AUTH_USER_MODEL, verbose_name='Agent ayant validé la demande')),
                ('commune_traitement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.commune')),
                ('demandeur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demandes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DocumentNumerique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_document', models.CharField(choices=[('NAISSANCE', 'Acte de Naissance'), ('MARIAGE', 'Acte de Mariage'), ('DECES', 'Acte de Décès'), ('CERTIFICAT_NAISSANCE', 'Certificat de Naissance'), ('CERTIFICAT_MARIAGE', 'Certificat de Mariage'), ('CERTIFICAT_DECES', 'Certificat de Décès')], editable=False, max_length=100)),
                ('nom_fichier', models.CharField(max_length=255)),
                ('fichier', models.FileField(upload_to='documents_etat_civil/')),
                ('signature_numerique', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('demande', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='core.demandeacte')),
            ],
        ),
        migrations.CreateModel(
            name='LogAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=10)),
                ('table_concernee', models.CharField(max_length=50)),
                ('objet_id', models.PositiveIntegerField()),
                ('description', models.TextField()),
                ('adresse_ip', models.GenericIPAddressField()),
                ('date_action', models.DateTimeField(auto_now_add=True)),
                ('utilisateur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Personne',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_unique', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('prenoms', models.CharField(max_length=200)),
                ('date_naissance', models.DateField()),
                ('lieu_naissance', models.CharField(max_length=200)),
                ('heure_naissance', models.TimeField(blank=True, null=True)),
                ('sexe', models.CharField(choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1)),
                ('profession', models.CharField(blank=True, max_length=100)),
                ('adresse', models.TextField(blank=True, null=True)),
                ('adresse_actuelle', models.TextField(blank=True)),
                ('situation_matrimoniale', models.CharField(choices=[('CELIBATAIRE', 'Célibataire'), ('MARIE', 'Marié(e)'), ('DIVORCE', 'Divorcé(e)'), ('VEUF', 'Veuf/Veuve')], default='CELIBATAIRE', max_length=15)),
                ('nom_pere', models.CharField(blank=True, max_length=100, verbose_name='Nom du père')),
                ('prenoms_pere', models.CharField(blank=True, max_length=150, verbose_name='Prénoms du père')),
                ('profession_pere', models.CharField(blank=True, max_length=100, null=True)),
                ('nom_mere', models.CharField(blank=True, max_length=100, verbose_name='Nom de la mère')),
                ('prenoms_mere', models.CharField(blank=True, max_length=150, verbose_name='Prénoms de la mère')),
                ('profession_mere', models.CharField(blank=True, max_length=100, null=True)),
                ('nationalite', models.CharField(default='Ivoirienne', max_length=50)),
                ('telephone', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator('^\\+?1?\\d{8,15}$', 'Numéro invalide')])),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('est_vivant', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('commune_naissance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='personnes_nees', to='core.commune')),
                ('commune_residence', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='residents', to='core.commune', verbose_name='Commune de résidence actuelle')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Mariage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_acte', models.CharField(blank=True, max_length=50, unique=True)),
                ('date_mariage', models.DateField()),
                ('regime_matrimonial', models.CharField(choices=[('COMMUNAUTE', 'Communauté de biens'), ('SEPARATION', 'Séparation de biens'), ('PARTICIPATION', 'Participation aux acquêts')], default='COMMUNAUTE', max_length=15)),
                ('temoin_epoux_1', models.CharField(max_length=100)),
                ('temoin_epoux_2', models.CharField(max_length=100)),
                ('temoin_epouse_1', models.CharField(max_length=100)),
                ('temoin_epouse_2', models.CharField(max_length=100)),
                ('numero_registre', models.CharField(blank=True, max_length=30)),
                ('page_registre', models.CharField(blank=True, max_length=10)),
                ('observations', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('commune_mariage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mariages', to='core.commune')),
                ('officier_etat_civil', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('epouse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mariages_epouse', to='core.personne')),
                ('epoux', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mariages_epoux', to='core.personne')),
            ],
            options={
                'verbose_name': 'Acte de Mariage',
                'verbose_name_plural': 'Actes de Mariage',
                'ordering': ['-date_creation'],
            },
            bases=(models.Model, core.models.AutoNumberMixin),
        ),
        migrations.AddField(
            model_name='demandeacte',
            name='personne_concernee',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demandes_actes', to='core.personne'),
        ),
        migrations.CreateModel(
            name='ActeNaissance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_acte', models.CharField(blank=True, max_length=50, unique=True)),
                ('date_enregistrement', models.DateField()),
                ('numero_registre', models.CharField(blank=True, max_length=30)),
                ('page_registre', models.CharField(blank=True, max_length=10)),
                ('declarant_nom', models.CharField(max_length=100)),
                ('declarant_qualite', models.CharField(max_length=50)),
                ('temoin1_nom', models.CharField(blank=True, max_length=100)),
                ('temoin2_nom', models.CharField(blank=True, max_length=100)),
                ('observations', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('agent_enregistreur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('commune_enregistrement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='actes_naissance', to='core.commune')),
                ('personne', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='acte_naissance', to='core.personne')),
            ],
            options={
                'verbose_name': 'Acte de Naissance',
                'verbose_name_plural': 'Actes de Naissance',
                'ordering': ['-date_creation'],
            },
            bases=(models.Model, core.models.AutoNumberMixin),
        ),
        migrations.CreateModel(
            name='ActeDeces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_acte', models.CharField(blank=True, max_length=50, unique=True)),
                ('date_deces', models.DateField()),
                ('heure_deces', models.TimeField(blank=True, null=True)),
                ('lieu_deces', models.CharField(max_length=200)),
                ('cause_deces', models.TextField(blank=True)),
                ('declarant_nom', models.CharField(max_length=100)),
                ('declarant_qualite', models.CharField(max_length=50)),
                ('medecin_nom', models.CharField(blank=True, max_length=100)),
                ('numero_certificat_medical', models.CharField(blank=True, max_length=50)),
                ('numero_registre', models.CharField(blank=True, max_length=30)),
                ('page_registre', models.CharField(blank=True, max_length=10)),
                ('observations', models.TextField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('agent_enregistreur', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('commune_deces', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actes_deces', to='core.commune')),
                ('personne', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='acte_deces', to='core.personne')),
            ],
            options={
                'verbose_name': 'Acte de Décès',
                'verbose_name_plural': 'Actes de Décès',
                'ordering': ['-date_creation'],
            },
            bases=(models.Model, core.models.AutoNumberMixin),
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code_departement', models.CharField(max_length=10, unique=True)),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departements', to='core.region')),
            ],
        ),
        migrations.CreateModel(
            name='SousPrefecture',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('code_sous_prefecture', models.CharField(max_length=10, unique=True)),
                ('adresse', models.TextField()),
                ('telephone', models.CharField(blank=True, max_length=15)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('departement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sous_prefectures', to='core.departement')),
            ],
        ),
        migrations.AddField(
            model_name='commune',
            name='sous_prefecture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='communes', to='core.sousprefecture'),
        ),
        migrations.AddField(
            model_name='demandeacte',
            name='tarif_applique',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.tarif'),
        ),
        migrations.CreateModel(
            name='ActeSequence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_acte', models.CharField(max_length=20)),
                ('dernier_numero_acte', models.IntegerField(default=0)),
                ('dernier_numero_registre', models.IntegerField(default=0)),
                ('dernier_numero_demande', models.IntegerField(default=0)),
                ('annee_courante', models.IntegerField(default=2025)),
                ('commune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sequences_actes', to='core.commune')),
            ],
            options={
                'verbose_name': "Séquence d'Acte",
                'verbose_name_plural': "Séquences d'Actes",
                'unique_together': {('commune', 'type_acte')},
            },
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.DecimalField(decimal_places=2, help_text="Montant de base de l'acte", max_digits=10)),
                ('montant_timbres', models.DecimalField(decimal_places=2, default=0, help_text='Montant des timbres fiscaux', max_digits=10)),
                ('montant_total', models.DecimalField(decimal_places=2, help_text='Montant total à payer', max_digits=10)),
                ('methode_paiement', models.CharField(choices=[('CARTE_BANCAIRE', 'Carte bancaire'), ('MOBILE_MONEY', 'Mobile Money'), ('ORANGE_MONEY', 'Orange Money'), ('MTN_MONEY', 'MTN Mobile Money'), ('MOOV_MONEY', 'Moov Money'), ('VIREMENT', 'Virement bancaire'), ('ESPECES', 'Espèces'), ('CHEQUE', 'Chèque')], max_length=20)),
                ('statut', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('EN_COURS', 'En cours de traitement'), ('CONFIRME', 'Confirmé'), ('ECHEC', 'Échec'), ('EXPIRE', 'Expiré'), ('REMBOURSE', 'Remboursé'), ('ANNULE', 'Annulé')], default='EN_ATTENTE', max_length=15)),
                ('reference_transaction', models.CharField(editable=False, help_text='Référence unique de la transaction', max_length=100, unique=True)),
                ('reference_externe', models.CharField(blank=True, help_text='Référence du provider de paiement', max_length=100)),
                ('numero_telephone', models.CharField(blank=True, help_text='Numéro de téléphone pour Mobile Money', max_length=15)),
                ('date_paiement', models.DateTimeField(auto_now_add=True, help_text='Date de création du paiement')),
                ('date_confirmation', models.DateTimeField(blank=True, help_text='Date de confirmation du paiement', null=True)),
                ('date_expiration', models.DateTimeField(blank=True, help_text="Date d'expiration du paiement", null=True)),
                ('date_remboursement', models.DateTimeField(blank=True, help_text='Date du remboursement', null=True)),
                ('commentaire', models.TextField(blank=True, help_text='Commentaires sur le paiement')),
                ('code_erreur', models.CharField(blank=True, help_text="Code d'erreur en cas d'échec", max_length=50)),
                ('message_erreur', models.TextField(blank=True, help_text="Message d'erreur détaillé")),
                ('agent_confirmateur', models.ForeignKey(blank=True, help_text='Agent qui a confirmé le paiement', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements_confirmes', to=settings.AUTH_USER_MODEL)),
                ('demande', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paiement', to='core.demandeacte')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-date_paiement'],
                'indexes': [models.Index(fields=['reference_transaction'], name='core_paieme_referen_820b67_idx'), models.Index(fields=['statut'], name='core_paieme_statut_77e647_idx'), models.Index(fields=['date_paiement'], name='core_paieme_date_pa_820346_idx')],
            },
        ),
        migrations.CreateModel(
            name='Statistique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('annee', models.PositiveIntegerField()),
                ('mois', models.PositiveIntegerField()),
                ('naissances_total', models.PositiveIntegerField(default=0)),
                ('naissances_masculines', models.PositiveIntegerField(default=0)),
                ('naissances_feminines', models.PositiveIntegerField(default=0)),
                ('mariages_total', models.PositiveIntegerField(default=0)),
                ('deces_total', models.PositiveIntegerField(default=0)),
                ('deces_masculins', models.PositiveIntegerField(default=0)),
                ('deces_feminins', models.PositiveIntegerField(default=0)),
                ('demandes_total', models.PositiveIntegerField(default=0)),
                ('demandes_traitees', models.PositiveIntegerField(default=0)),
                ('revenus_total', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('commune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistiques', to='core.commune')),
            ],
            options={
                'unique_together': {('commune', 'annee', 'mois')},
            },
        ),
    ]
